/* CodingTrack.module.css - With Motor Animation */
/* Using design tokens from retro-ui-tokens.css */

.trackContainer {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100%;
    width: 100%;
    border: 2px solid var(--color-blue);
    border-radius: var(--radius-md);
    background-color: var(--color-black);
    padding: var(--spacing-4);
}

.codeSucker {
    position: absolute;
    top: var(--spacing-4);
    left: var(--spacing-4);
    color: var(--color-blue);
    width: 48px;
    height: 48px;
    opacity: 0.6;
}

.slotDisplay {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

/* Motor Visualization (from motor-demo.tsx) */
.motorVisualization {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin-bottom: var(--spacing-8);
}

.motorAnimation {
    position: relative;
    width: 150px;
    height: 150px;
}

.motorBorder {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

.motorRotor {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

.clockwise {
    animation-name: clockwise;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
}

.counterclockwise {
    animation-name: counterclockwise;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
}

@keyframes clockwise {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

@keyframes counterclockwise {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(-360deg);
    }
}

.motorLabel {
    color: var(--color-neon-green);
    text-align: center;
    text-transform: uppercase;
    font-size: var(--font-size-lg);
    margin-top: var(--spacing-4);
}

/* Timer visualization */
.timerVisualization {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin-bottom: var(--spacing-8);
}

.timerIcon {
    font-size: 48px;
    color: var(--color-blue);
    margin-bottom: var(--spacing-2);
}

.timerLabel {
    color: var(--color-blue);
    text-transform: uppercase;
    font-size: var(--font-size-lg);
    margin-top: var(--spacing-2);
}

.timerValue {
    font-size: 48px;
    color: var(--color-yellow);
    margin: var(--spacing-2) 0;
}

.timerUnit {
    font-size: var(--font-size-sm);
    color: var(--color-yellow);
    text-transform: uppercase;
}

/* Test button at bottom as in FIGMA */
.testButton {
    background-color: #00bfff;
    border: none;
    border-radius: var(--radius-md);
    color: black;
    font-family: var(--font-family-primary);
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-bold);
    padding: var(--spacing-2) var(--spacing-6);
    cursor: pointer;
    text-transform: uppercase;
    margin-top: auto;
    margin-bottom: var(--spacing-4);
}

.testButton:hover {
    opacity: 0.9;
}

/* Description box at the bottom */
.slotDescription {
    width: 90%;
    padding: var(--spacing-3) var(--spacing-4);
    background-color: rgba(0, 0, 0, 0.3);
    border: 2px solid var(--color-blue);
    border-radius: var(--radius-md);
    color: var(--color-text-inactive);
    font-size: var(--font-size-sm);
    text-align: center;
    min-height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
}

/* Down arrow indicator */
.downArrow {
    margin: var(--spacing-4) 0;
    width: 20px;
    height: 20px;
    fill: var(--color-blue);
    opacity: 0.8;
}

/* Navigation buttons (hidden but functional) */
.nextButton,
.prevButton {
    position: absolute;
    background: transparent;
    border: none;
    cursor: pointer;
    transition: transform var(--transition-normal);
    z-index: 1;
    opacity: 0;
}

.nextButton {
    right: var(--spacing-4);
    top: 50%;
    transform: translateY(-50%);
}

.prevButton {
    left: var(--spacing-4);
    top: 50%;
    transform: translateY(-50%);
}
