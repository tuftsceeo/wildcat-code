/* MotorDash.module.css - Refactored with design tokens */

.motorDashContainer {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-2);
    width: 100%;
    max-width: 400px;
    margin: 0 auto;
}

.singleMotorDash {
    background-color: var(--panel-bg);
    border: var(--border-width-standard) solid var(--color-transparent);
    border-radius: var(--radius-md);
    padding: var(--spacing-2);
    width: 100%;
    transition: all var(--transition-normal);
    position: relative;
    overflow: hidden; /* Hide overflow for the motor animation */
}

.singleMotorDash.disconnected {
    border-color: rgba(var(--color-error-main-rgb), 0.15);
    background-color: rgba(var(--color-error-main-rgb), 0.1);
}

.motorHeader {
    display: flex;
    align-items: center;
    margin-bottom: var(--spacing-3);
    z-index: 2;
}

.portLabel {
    background-color: rgba(var(--color-background-rgb),.9);
    color: var(--color-text);
    font-family: var(--font-family-active);
    font-size: var(--font-size-base);
    flex-grow: 0;
    text-transform: uppercase;
    letter-spacing: var(--letter-spacing-wide);
    z-index: 2;
}

.disconnectedLabel {
    color: var(--color-error-main);
    font-size: var(--font-size-xxs);
    margin-right: var(--spacing-1);
    padding: var(--spacing-1) var(--spacing-1);
    background-color: rgba(var(--color-error-main-rgb), 0.2);
    border-radius: var(--radius-sm);
    letter-spacing: var(--letter-spacing-wide);
    z-index: 2;
}

.dismissButton {
    background-color: transparent;
    border: var(--border-width-thin) solid var(--color-error-main);
    color: var(--color-error-main);
    font-size: var(--font-size-base);
    cursor: pointer;
    padding: calc(0 * var(--spacing-1)) var(--spacing-1);
    margin-left: var(--spacing-1);
    border-radius: var(--radius-sm);
    transition: all var(--transition-normal);
    z-index: 2;
}

.dismissButton:hover {
    background-color: var(--color-error-main);
    color: var(--color-background);
    transform: var(--button-scale-hover);
    z-index: 2;
}

.dismissButton:active {
    transform: var(--button-scale-active);
    z-index: 2;
}

/* Container for motor controls to ensure proper alignment */
.motorControlContainer {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-1);
}

.motorAnimationWrapper {
    width: 80%;
    border-radius: 50%;
    aspect-ratio: 1 / 1; /* Maintain a perfect circle */
    position: absolute;
    left: 50%;
    top: 0; /* Position at top */
    transform: translate(-50%, -52%); /* Pull it up so it's partially hidden */
    z-index: 1;
}

/* Bar visualization styles */
.barVisualization {
    display: flex;
    justify-content: space-between;
    align-items: flex-end;
    height: 60px;
    width: 100%;
    margin-bottom: var(--spacing-1);
    padding: 0 var(--spacing-1);
}

.bar {
    flex: 1;
    margin: 0 2px;
    border-radius: 2px 2px 0 0;
    background-color: var(--color-gray-subtle);
    cursor: pointer;
    border: none;
    transition: all var(--transition-normal);
    padding: 0;
    transform: var(--button-scale-default);
    position: relative; /* For positioning the icon */
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: center;
}

/* Icon at the bottom of bar */
.barIcon {
    position: absolute;
    bottom: 2px;
    color: var(--color-background);
    display: flex;
    align-items: center;
    justify-content: center;
}

.bar:hover:not(:disabled) {
    transform: scale(var(--button-scale-hover));
}

.bar:focus-visible {
    outline: var(--border-width-standard) solid var(--panel-border);
}

.forwardBar {
    background-color: var(--color-gray-subtle);
}

.stopBar {
    background-color: var(--color-gray-subtle);
}

.stopBar svg{
    stroke: var(--color-error-main);
    fill: var(--color-error-main);
}

.stopBar.active {
    background-color: rgba(var(--color-error-main-rgb),.6);
    transform: scale(1.2);
    box-shadow: var(--glow-error);
}

.stopBar.active:hover {
    transform: scale(0,1.2);
}

.stopBar.active svg{
    stroke: white;
    fill: var(--color-error-main);
}

.forwardBar.active {
    background-color: var(--color-motor-forward);
    box-shadow: var(--glow-secondary);
}

.backwardBar {
    background-color: var(--color-gray-subtle);
}

.backwardBar.active {
    background-color: var(--color-motor-backward);
    box-shadow: var(--glow-warning);
}

/* For icons that need to be flipped horizontally */
.flippedHorizontally {
    transform: scaleX(-1);
}

/* Styling for disabled/disconnected state */
.disconnected .bar {
    cursor: not-allowed;
    opacity: 0.4;
}

/* No connection/No motors messages */
.noConnection,
.noMotors {
    display: flex;
    align-items: center;
    gap: var(--spacing-3);
    justify-content: center;
    padding: var(--spacing-4);
    font-family: var(--font-family-active);
    font-size: var(--font-size-sm);
    border-radius: var(--radius-md);
    text-transform: uppercase;
    letter-spacing: var(--letter-spacing-wide);
}

.noConnection {
    background-color: rgba(var(--color-error-main-rgb), 0.1);
    color: var(--color-error-main);
    border: var(--border-width-standard) solid var(--color-error-main);
}

.noMotors {
    background-color: rgba(var(--color-warning-main-rgb), 0.1);
    color: var(--color-warning-main);
    border: var(--border-width-standard) solid var(--color-warning-main);
}

.noConnection svg,
.noMotors svg {
    animation: pulse 2s infinite;
}

@keyframes pulse {
    0% {
        opacity: 1;
    }
    50% {
        opacity: 0.5;
    }
    100% {
        opacity: 1;
    }
}