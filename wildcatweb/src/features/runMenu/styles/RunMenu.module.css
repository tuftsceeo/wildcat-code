/* RunMenu.module.css - Revised with icons instead of checkmarks */

.menuBackground {
    height: 100%;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    border: var(--border-width-standard) solid var(--panel-border);
    border-radius: var(--radius-md);
    background-color: var(--panel-bg);
    color: var(--panel-text);
    font-family: var(--font-family-active);
    padding: var(--spacing-4);
}

.menuContent {
    display: flex;
    flex-direction: column;
    height: 100%;
    position: relative;
    align-items: center;
    justify-content: center;
}

/* Content wrapper for scroll tracking */
.menuContentWrapper {
    flex: 1;
    position: relative;
    height: 450px;
    overflow: hidden;
}

.menuContentWrapper.scrollable {
    overflow-y: auto;
    /* Custom scrollbar styling */
    scrollbar-width: thin;
    scrollbar-color: var(--color-primary-high) var(--color-gray-subtle);
}

/* Webkit scrollbar styling */
.menuContentWrapper.scrollable::-webkit-scrollbar {
    width: 8px;
}

.menuContentWrapper.scrollable::-webkit-scrollbar-track {
    background: var(--color-gray-subtle);
    border-radius: var(--radius-full);
}

.menuContentWrapper.scrollable::-webkit-scrollbar-thumb {
    background: var(--color-primary-high);
    border-radius: var(--radius-full);
    border: 2px solid var(--color-gray-subtle);
}

.menuContentWrapper.scrollable::-webkit-scrollbar-thumb:hover {
    background: var(--color-primary-main);
}

/* Gradient overlay */
.gradientOverlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 120px;
    background: linear-gradient(
        to bottom,
        transparent,
        var(--panel-bg) 95%
    );
    pointer-events: none;
    z-index: 1;
    display: flex;
    align-items: flex-end;
    justify-content: center;
    padding-bottom: var(--spacing-4);
}

.menuContentWrapper.scrollable .gradientOverlay {
    opacity: 1;
}

.menuContentWrapper.atBottom .gradientOverlay {
    opacity: 0;
}

/* Hide title as requested */
.menuTitle {
    display: none;
}

.stepsContainer {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-4);
    width: 100%;
    margin: auto 0;
}

/* Step buttons styled with theme tokens */
.stepButton {
    background-color: var(--button-default-bg);
    border: var(--border-width-standard) solid var(--button-default-border);
    border-radius: var(--radius-md);
    color: var(--button-default-text);
    font-family: var(--font-family-active);
    font-size: var(--font-size-lg);
    padding: var(--spacing-3);
    text-align: center;
    cursor: pointer;
    width: 100%;
    position: relative;
    
    /* Layout for content */
    display: flex;
    align-items: center;
    justify-content: space-between;
}

/* Only apply transitions and transforms when not being dragged */
.stepButton:not(.dragging) {
    transition: transform var(--transition-normal);
    transform: var(--button-scale-default);
}

.stepButton:not(.dragging):hover:not(:disabled) {
    transform: var(--button-scale-hover);
}

.stepButton:not(.dragging):active:not(:disabled) {
    transform: var(--button-scale-active);
}

/* When dragging, disable all hover and active states */
.stepButton.dragging,
.stepButton.dragging:hover,
.stepButton.dragging:active {
    transform: none;
    transition: none;
}

.stepButton.active,
.stepButton.current {
    border-color: var(--button-selected-border);
    color: var(--button-selected-text);
    background-color: var(--button-selected-bg);
}

/* Command icon styling - now on the right side */
.commandIcon {
    color: var(--button-default-text);
}

.stepButton.current .commandIcon,
.stepButton.active .commandIcon {
    color: var(--button-selected-text);
}

/* Container for the command icon */
.iconContainer {
    display: flex;
    align-items: center;
    justify-content: center;
}

/* Step name text */
.stepName {
    flex: 1;
    text-align: center;
    padding-left: 32px;
    padding-right: var(--spacing-2);
}

/* Inactive steps */
.stepButton.configured:not(.current) {
    border-color: var(--button-default-border);
    color: var(--button-default-text);
}

/* Warning styling when needed */
.stepButton.warning {
    border-color: var(--color-warning-main);
}

/* Disabled step styling */
.stepButton:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    background-color: var(--button-disabled-bg, var(--button-default-bg));
    color: var(--button-disabled-text, var(--color-gray-medium));
    border-color: var(--button-disabled-border, var(--color-gray-medium));
    transform: var(--button-scale-default);
}

/* Play button - uses blue accent color */
.playButton {
    background-color: var(--button-contained-default-bg);
    border: none;
    border-radius: var(--radius-md);
    color: var(--button-contained-default-text);
    font-family: var(--font-family-active);
    font-size: var(--font-size-base);
    padding: var(--spacing-2) var(--spacing-4);
    width: 100px;
    cursor: pointer;
    margin-top: var(--spacing-3);
    margin-bottom: var(--spacing-2);
    text-transform: uppercase;
    align-self: center;
    transition: transform var(--transition-normal);
    transform: var(--button-scale-default);
}

.playButton:hover:not(:disabled) {
    opacity: 0.9;
    transform: var(--button-scale-hover);
}

.playButton:disabled {
    background-color: var(--button-contained-disabled-bg);
    color: var(--button-contained-disabled-text);
    cursor: not-allowed;
    opacity: var(--button-contained-disabled-opacity);
}

.playButton:active {
    transform: var(--button-scale-active);
}

.errorIcon,
.warningIcon {
    position: absolute;
    right: -12px;
    top: -12px;
    z-index: var(--z-index-above);
    animation: pulse 2s infinite;
}

@keyframes pulse {
    0% {
        opacity: 0.7;
    }
    50% {
        opacity: 1;
    }
    100% {
        opacity: 0.7;
    }
}

/* In RunMenu.module.css */
.stopButton {
    background-color: var(--button-default-bg);
    border: var(--border-width-standard) solid var(--color-error-low);
    color: var(--color-error-low);
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.stopButton.current {
    border-color: var(--color-error-main);
    color: var(--color-error-main);
}

.stopIcon {
    color: currentColor;
}

.flippedVertically {
    transform: scaleY(-1);
}

/* Draggable container styles */
.draggableContainer {
    position: relative;
    width: 100%;
}

.draggableContainer.dragging {
    opacity: 0.5;
    transform: scale(1.02);
    z-index: var(--z-index-above);
    transition: none; /* Remove transition during drag */
}

.draggableContainer.dropTarget {
    transform: translateY(2px);
    transition: none; /* Remove transition during drop */
}

/* Drag handle styles */
.dragHandle {
    position: absolute;
    left: 8px;
    top: 50%;
    transform: translateY(-50%);
    display: flex;
    flex-direction: column;
    gap: 4px;
    opacity: 0.6;
    transition: opacity var(--transition-normal);
    cursor: grab;
    z-index: 1;
}

.draggableContainer:hover .dragHandle {
    opacity: 0.8;
}

.dragHandle:active {
    cursor: grabbing;
}

.dot {
    width: 4px;
    height: 4px;
    background-color: var(--button-default-text);
    border-radius: 50%;
}

/* Ensure the drag handle is visible in all button states */
.stepButton.current .dragHandle .dot,
.stepButton.active .dragHandle .dot {
    background-color: var(--button-selected-text);
}

.stepButton:disabled .dragHandle .dot {
    background-color: var(--button-disabled-text);
}

/* Add step button styles */
.addStepButton {
    background-color: var(--button-default-bg);
    border: var(--border-width-standard) dashed var(--button-default-border);
    border-radius: var(--radius-md);
    color: var(--button-default-text);
    font-family: var(--font-family-active);
    font-size: var(--font-size-base);
    padding: var(--spacing-2);
    text-align: center;
    cursor: pointer;
    width: 100%;
    margin: var(--spacing-2) 0;
    transition: all var(--transition-normal);
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--spacing-2);
}

.addStepButton:hover:not(:disabled) {
    background-color: var(--button-default-hover-bg);
    border-color: var(--button-default-hover-border);
}

.addStepButton:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    background-color: var(--button-disabled-bg);
    border-color: var(--button-disabled-border);
}

/* Mission mode warning styles */
.missionModeWarning {
    display: flex;
    align-items: center;
    gap: var(--spacing-2);
    color: var(--color-warning-main);
    font-size: var(--font-size-sm);
    margin-bottom: var(--spacing-2);
    padding: var(--spacing-2);
    background-color: var(--color-warning-bg);
    border-radius: var(--radius-sm);
}