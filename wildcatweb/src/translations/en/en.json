{
    "ui": {
        "motor": "Motor",
        "motorA": "Motor A",
        "motorB": "Motor B",
        "motorC": "Motor C",
        "motorD": "Motor D",
        "motorE": "Motor E",
        "motorF": "Motor F",

        "direction": "Direction",
        "clockwise": "clockwise",
        "countercw": "counterclockwise",
        "stopped": "stopped",

        "speed": "speed",
        "slow": "slow",
        "medium": "medium",
        "fast": "fast",

        "wait": "Wait",
        "seconds": "seconds",

        "turns": "turns",
        "stops": "stops",

        "apply": "Apply",
        "cancel": "Cancel",
        "next": "Next",
        "play": "Play",

        "button": "Button",
        "buttonA": "Button A",
        "buttonB": "Button B",
        "buttonC": "Button C",
        "buttonD": "Button D",
        "buttonE": "Button E",
        "buttonF": "Button F",
        "pressed": "pressed",
        "released": "released",
        "waitUntil": "Wait until",
        "port": "Port",
        "waitFor": "Wait for",

        "color": "Color Sensor",
        "colorA": "Color Sensor A",
        "colorB": "Color Sensor B",
        "colorC": "Color Sensor C",
        "colorD": "Color Sensor D",
        "colorE": "Color Sensor E",
        "colorF": "Color Sensor F",
        "red": "red",
        "green": "green",
        "blue": "blue",
        "yellow": "yellow",
        "white": "white",
        "black": "black",
        "magenta": "magenta",
        "orange": "orange",
        "azure": "azure"
    },

    "complexity": {
        "icon_only": {
            "templates": {
                "motor_action": "{port} {direction} {speed}",
                "motor_stop": "{port} stops",
                "wait_action": "Wait {seconds}",
                "button_action": "Wait {port} {condition}",
                "color_action": "Wait {port} {color}",
                "default_message": "Select action or sensor",
                "stop_message": "Stop program"
            }
        },

        "beginner": {
            "templates": {
                "motor_action": "{port} turns {direction} {speed}",
                "motor_stop": "{port} stops",
                "wait_action": "Wait {seconds} seconds",
                "button_action": "{port} wait {condition}",
                "color_action": "{port} wait for {color}",
                "default_message": "Select action or sensor",
                "stop_message": "Program stopped"
            }
        },

        "intermediate": {
            "templates": {
                "motor_action": "{port} turns {direction} at {speed} speed.",
                "motor_stop": "{port} stops turning.",
                "wait_action": "Robot waits {seconds} seconds.",
                "button_action": "Wait until {port} is {condition}.",
                "color_action": "Wait until {port} detects {color}.",
                "default_message": "Select an action or sensor",
                "stop_message": "The program has stopped."
            }
        },

        "advanced": {
            "templates": {
                "motor_action": "{port} rotates {direction} at {speed} speed.",
                "motor_stop": "{port} stops rotating.",
                "wait_action": "The robot waits for {seconds} seconds.",
                "button_action": "The robot waits until {port} is {condition}.",
                "color_action": "The robot waits until {port} detects {color}.",
                "default_message": "Select an action or sensor",
                "stop_message": "The program has stopped."
            }
        },

        "text_only": {
            "templates": {
                "motor_action": "{port} rotates {direction} at {speed} speed.",
                "motor_stop": "{port} stops rotating.",
                "wait_action": "The robot waits for {seconds} seconds.",
                "button_action": "The robot pauses execution until the button on {port} is {condition}.",
                "color_action": "The robot pauses execution until the color sensor on {port} detects {color}.",
                "default_message": "Select an action or sensor",
                "stop_message": "The program has stopped."
            }
        }
    }
}
